ДЗ - #1. .NET Introduction
1.	Что пишут на .NET Core?
На .NET Core пишут кроссплатформенные приложение, веб-приложение, мобильные приложение, облачные сервисы, игры и много чего ещё.
2.	Что такое MSIL и какие задачи он выполняет в .NET?
MSIL - Это промежуточный язык, который используется в технологии .NET. Когда мы компилируем программу на C# (или другом языке .NET), компилятор преобразует исходный код в MSIL.
3.	Какие языки программирования поддерживаются .NET Framework?  
.NET Framework поддерживает – C# , VB.NET , F# .
4.	Какую роль MSIL играет в обеспечении переносимости кода между различными платформами?
MSIL обеспечивает переносимость кода, служа промежуточным представлением, которое CLR интерпретирует на различных платформах.
5.	Как CLR обеспечивает безопасность типов и управление памятью в приложениях .NET?
CLR обеспечивает безопасность типов через строгую систему типов и управление памятью с помощью автоматической сборки мусора, предотвращая утечки памяти и обеспечивая безопасность выполнения кода.
6.	Каковы основные принципы Общеязыковой спецификации (CLS) и что это такое используется для?
Основные принципы CLS это обеспечить совместимость между разными языками программирования на .NET, что позволяет использовать библиотеки на разных языках без изменений исходного кода.
7.	Как CTS и CLS способствуют совместимости кода, написанного на разных платформах .NET языки?
CTS и CLS в .NET обеспечивают совместимость кода между разными языками.CTS устанавливает стандарты для типов данных, а CLS определяет правила взаимодействия, обеспечивая единый формат данных и вызова функций.
8.	Что такое оптимизация на основе профиля (PGO) и как она может повысить производительность приложений .NET? Как можно использовать технологию SIMD для оптимизации вычислений в приложениях .NET?
Оптимизация на основе профиля (PGO) - это метод оптимизации, который использует информацию о реальном выполнении программы для улучшения её производительности. Путем анализа профиля выполнения приложения можно выделить части кода, которые часто используются, и оптимизировать их. Это включает инлайнинг, оптимизацию ветвлений, улучшенное управление памятью и другие оптимизации, адаптированные к конкретным сценариям использования.
